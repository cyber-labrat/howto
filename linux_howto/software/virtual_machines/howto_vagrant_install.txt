####################################
#####  Vagrant Installation  #######
####################################

https://www.digitalocean.com/community/tutorials/how-to-install-vagrant-on-a-vps-running-ubuntu-12-04
https://www.digitalocean.com/community/tutorials/how-to-use-vagrant-on-your-own-vps-running-ubuntu
https://www.digitalocean.com/community/tutorials/how-to-use-digitalocean-as-your-provider-in-vagrant-on-an-ubuntu-12-10-vps
###################################

sudo apt-get install dpkg-dev virtualbox-dkms
wget http://files.vagrantup.com/packages/0219bb87725aac28a97c0e924c310cc97831fd9d/vagrant_1.2.4_i686.deb
dpkg -i vagrant_1.2.4_i686.deb
sudo apt-get install linux-headers-$(uname -r)
sudo dpkg-reconfigure virtualbox-dkms

--------------------------

Get a box
vagrant box add precise32 http://files.vagrantup.com/precise32.box

mkdir test_project
cd test_project
vagrant init
sudo nano Vagrantfile
#change config.vm.box = "base" into config.vm.box = "precise32"
vagrant up
vagrant ssh
exit
vagrant destroy

--------------------------

#### install wheezy32.box #####

mkdir test_project
cd test_project
vagrant init
sudo Vagrantfile
#edit config.vm.box = "wheezy32"
vagrant box add wheezy32 http://tools.swergroup.com/downloads/wheezy32.box
vagrant up
vagrant box list
#rm Vagrantfile


#vm: the box 'base' could not be found

--------------------------

Vagrant has detected that you have a version of VirtualBox installed
that is not supported. Please install one of the supported versions
listed below to use Vagrant:
4.0, 4.1, 4.2

sudo apt-get update
sudo apt-get install linux-headers-$(uname -r)
sudo apt-get install virtualbox-4.2

sudo apt-get purge virtualbox-dkms
sudo apt-get install virtualbox-dkms

####

http://www.vagrantbox.es/
https://atlas.hashicorp.com/boxes/search
https://atlas.hashicorp.com/chef
http://nrel.github.io/vagrant-boxes/
https://github.com/chef/bento

http://docs.vagrantup.com/v2/boxes.html
vagrant box add USER/BOX

####

How to Create a CentOS Vagrant Base Box
https://github.com/ckan/ckan/wiki/How-to-Create-a-CentOS-Vagrant-Base-Box


















#######################################################################
#
#  	virtualbox vagrant  ubuntu
#
#######################################################################

sudo apt install virtualbox -y
sudo apt install vagrant -y

# build and start vm
sudo vagrant init ubuntu/trusty64; vagrant up --provider virtualbox

# login
user: vagrant / passwd: vagrant

VBoxManage list vms
VBoxManage list runningvms

VBoxManage startvm mpxvm_default_1536414539253_4905 --type gui
VBoxManage startvm mpxvm_default_1536414539253_4905 --type sdl
VBoxManage startvm "mpxvm_default_1536414539253_4905" --type headless
VBoxManage controlvm mpxvm_default_1536414539253_4905 poweroff soft

VBoxHeadless --startvm mpxvm_default_1536414539253_4905 --vnc --vncport 5901 --vncpass passw
VBoxManage controlvm mpxvm_default_1536414539253_4905 pause
VBoxManage controlvm mpxvm_default_1536414539253_4905 resume
VBoxManage controlvm mpxvm_default_1536414539253_4905 reset
VBoxManage controlvm mpxvm_default_1536414539253_4905 poweroff
VBoxManage controlvm mpxvm_default_1536414539253_4905 savestate

#get ip
VBoxManage guestproperty get mpxvm_default_1536414539253_4905 "/VirtualBox/GuestInfo/Net/0/V4/IP"
Value: 10.0.2.15

ssh -Axv vagrant@10.0.2.15


#######################################################################
#
#   VM VirtualBox  nested virtualization
#
#######################################################################

https://docs.oracle.com/en/virtualization/virtualbox/6.0/relnotes/nested-virt-support.html
https://docs.oracle.com/en/virtualization/virtualbox/6.0/admin/nested-virt.html
https://www.linuxtechi.com/enable-nested-virtualization-virtualbox-linux/
https://www.ostechnix.com/how-to-enable-nested-virtualization-in-virtualbox/

 --nested-hw-virt


 vboxmanage list vms
 VBoxManage modifyvm ubuntu18 --nested-hw-virt on
 VBoxManage modifyvm "Ubuntu 20.04 Server" --nested-hw-virt on
 vboxmanage modifyvm "Ubuntu 20.04 Server" --nested-hw-virt on




#######################################################################
#
#	docker ubuntu
#
#######################################################################

sudo apt install docker docker.io -y
sudo -i
docker pull ubuntu
docker images
docker ps
docker container ls

#docker run -it --name myubuntu -d ubuntu:latest
docker rm /myubuntu
docker run --name myubuntu --rm -i -t ubuntu /bin/bash

apt update && apt upgrade -y
apt install apt-utils -y
apt install apache2 composer mysql-client mysql-server vim -y
service apache2 start && service mysql start
service apache2 status && service mysql status
php -v && apache2 -v && mysql --version
hostname -I

vi /var/www/html/index.html
exit

# access again same container with preinstalled lamp
docker --name myubuntu  -it ubuntu /bin/bash

docker ps
docker ps -l
docker ps -a

docker kill 63ac4963d56a
docker exec -it myubuntu /bin/bash

ref
https://docs.docker.com/engine/reference/commandline/exec/#run-docker-exec-on-a-running-container
https://docs.docker.com/docker-for-mac/networking/#use-cases-and-workarounds
https://medium.com/dot-debug/running-chrome-in-a-docker-container-a55e7f4da4a8


sudo docker container ls
sudo docker image ls
docker rm $(docker ps -a -f status=exited -q)
docker images purge
docker rmi $(docker images -a -q)


############################

docker run -it -d --rm -p 8000:8000  cd6d8154f1e1 /bin/bash
docker container inspect

docker network ls
docker network create mynewbridge
docker run --net=mynewbridge -p 80:80  ubuntu

#docker network create --subnet=172.18.0.0/16 mynet123

#docker network create --subnet=172.18.0.0/16 mynet123
#docker run --net mynet123 --ip 172.18.0.22 -it ubuntu bash
ip addr
--hostname to specify a hostname
--add-host to add more entries to /etc/hosts

#sudo docker run -it --net mynewbridge --ip 172.18.0.2 cd6d8154f1e1 /bin/bash
#sudo docker run -i -t --net=none -h test --add-host test:127.0.0.1 ubuntu /bin/bash

docker network create --subnet 172.18.8.0/23 --gateway 172.18.8.1 docker-net
docker run --ti --net docker-net --ip 172.18.9.30 centos

# https://stackoverflow.com/questions/27937185/assign-static-ip-to-docker-container

docker run --name dns --restart=always -d -p 172.16.177.20:53:53/udp dns
docker run --name registry --restart=always -d -p 172.16.177.12:80:5000 registry
docker run --name cache --restart=always -d -p 172.16.177.13:80:3142 -v /data/cache:/var/cache/apt-cacher-ng cache
docker run --name mirror --restart=always -d -p 172.16.177.19:80:80 -v /data/mirror:/usr/share/nginx/html:ro mirror
docker run --cap-add=NET_ADMIN -dit imagename /bin/sh -c "/sbin/ip addr add 172.17.0.12 dev eth0; bash"





#####################################################
#
#	How to save a Docker container state
#   - run image-id in container and do changes
#   - exit,get container-id and commit to container-id changes to an image:version
#
#####################################################


https://docs.docker.com/glossary/?term=Dockerfile
https://docs.docker.com/glossary/?term=image
https://docs.docker.com/glossary/?term=container
https://docs.docker.com/glossary/?term=build
https://docs.docker.com/engine/reference/commandline/commit/#commit-a-container-with-new-configurations
https://docs.docker.com/engine/reference/commandline/rm/#remove-a-link-specified-with---link-on-the-default-bridge-network


sudo apt install docker docker.io -y
sudo -i
docker pull ubuntu
docker pull debian
---------------------------------
Force-remove a running container
docker rm --force redis
Remove all stopped containers
docker rm $(docker ps -a -q)
Remove a container and its volumes
docker rm -v ubuntu
---------------------------------
docker images
docker ps
docker container ls

docker run --name myubuntu --rm -i -t ubuntu /bin/bash
docker run --name mydebian --rm -i -t debian /bin/bash
-------------------
apt update && apt install htop
exit
------------------
docker ps -a
------------------
docker run --name myubuntu --rm -i -t gifted_wilson/testimage:version1 /bin/bash
------------------
docker container ls # get container-id
------------------
docker commit 530f2906782a gifted_wilson/testimage:version2
------------------
docker run --name myubuntu --rm -i -t gifted_wilson/testimage:version2 /bin/bash
------------------
docker image rm 4f974c81cf45 # get image-id
------------------

*
*
*
*
*

# Accessing and modifying the container
docker pull nginx
docker run --name nginx-template-base -p 8080:80 -e TERM=xterm -d nginx
docker exec -it CONTAINER_ID bash
docker commit CONTAINER_ID nginx-template
docker run --name nginx-dev -p 8080:80 -e TERM=xterm -d nginx-template
------------------
docker run ubuntu apt-get install -y ping
docker ps -l
docker commit <container_id> iman/ping
docker run iman/ping ping www.google.com
------------------
docker ps
docker commit c3f279d17e0a  svendowideit/testimage:version3
docker images
------------------
docker start f357e2faab77 # restart it in the background
docker attach f357e2faab77 # reattach the terminal & stdin
------------------
docker run -it ubuntu /bin/bash
docker ps -a
docker commit <containerid> <name>/testiamge:version1











